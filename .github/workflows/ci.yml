name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      shared: ${{ steps.filter.outputs.shared }}
      eslintconfig: ${{ steps.filter.outputs.eslintconfig }}
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            shared:
              - 'packages/shared/**'
            eslintconfig:
              - 'packages/eslint-config/**'
            backend:
              - 'apps/auth-backend/**'
            frontend:
              - 'apps/auth-frontend/**'

  lint:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm lint
      
  build-shared:
    needs: [detect-changes, lint]
    if: ${{ needs.detect-changes.outputs.shared == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm build:shared
      - name: Check build output
        run: |
          if [ ! -d "packages/shared/dist" ]; then
            echo "Shared package build output not found"
            exit 1
          fi

  build-backend:
    needs: [detect-changes, lint]
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm build:shared
      - name: Build backend
        working-directory: apps/auth-backend
        run: bun run build:ci

  build-frontend:
    needs: [detect-changes, lint]
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm build:shared
      - name: Build frontend
        working-directory: apps/auth-frontend
        run: pnpm run build 