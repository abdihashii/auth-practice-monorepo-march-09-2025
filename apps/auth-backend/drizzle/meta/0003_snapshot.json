{
  "id": "e6a79ef3-4fd4-424f-ab81-5ca3d70964f2",
  "prevId": "a5fee778-65b3-4128-bfd4-017f58244dce",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "hashed_password": {
          "name": "hashed_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_token_invalidation": {
          "name": "last_token_invalidation",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "verification_token": {
          "name": "verification_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "verification_token_expires_at": {
          "name": "verification_token_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reset_token": {
          "name": "reset_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reset_token_expires_at": {
          "name": "reset_token_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_password_change": {
          "name": "last_password_change",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "users_policy": {
          "name": "users_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "\n      ((select auth.get_current_user_id()) IS NOT NULL AND (select auth.get_current_user_id()) = \"auth\".\"users\".\"id\")\n      OR\n      (auth.is_service_request() = TRUE)\n    "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profile_picture": {
          "name": "profile_picture",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "settings": {
          "name": "settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"theme\":\"system\",\"language\":\"en\",\"timezone\":\"UTC\"}'::jsonb"
        },
        "notification_preferences": {
          "name": "notification_preferences",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"email\":{\"enabled\":true,\"digest\":\"daily\",\"marketing\":false},\"push\":{\"enabled\":true,\"alerts\":true}}'::jsonb"
        },
        "last_activity_at": {
          "name": "last_activity_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_successful_login": {
          "name": "last_successful_login",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "login_count": {
          "name": "login_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_user_id_users_id_fk": {
          "name": "profiles_user_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_email_unique": {
          "name": "profiles_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "profiles_policy": {
          "name": "profiles_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "\n      ((select auth.get_current_user_id()) IS NOT NULL AND (select auth.get_current_user_id()) = \"profiles\".\"user_id\")\n      OR\n      (auth.is_service_request() = TRUE)\n    "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "user",
        "admin",
        "superadmin"
      ]
    }
  },
  "schemas": {
    "auth": "auth"
  },
  "sequences": {},
  "roles": {
    "app_user": {
      "name": "app_user",
      "createDb": true,
      "createRole": true,
      "inherit": true
    }
  },
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}