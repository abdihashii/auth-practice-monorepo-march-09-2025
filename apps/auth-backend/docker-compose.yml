version: "3.8"

services:
  # Database service
  auth-backend-db:
    image: postgres:latest
    container_name: auth-backend-db
    environment:
      - POSTGRES_DB=auth-backend-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Development service with live reloading
  auth-backend-dev:
    build:
      context: ../.. # Root of the monorepo
      dockerfile: apps/auth-backend/Dockerfile.dev
    container_name: auth-backend-dev
    ports:
      - "1234:1234"
    volumes:
      # For development, mount the source code
      - ../../apps/auth-backend:/app/apps/auth-backend
      # Exclude node_modules from being overwritten by the mount
      - /app/apps/auth-backend/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    depends_on:
      auth-backend-db:
        condition: service_healthy

  # Production-ready service
  auth-backend:
    build:
      context: ../.. # Root of the monorepo
      dockerfile: apps/auth-backend/Dockerfile.server
      target: production
    container_name: auth-backend
    ports:
      - "1234:1234"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

volumes:
  postgres_data:
