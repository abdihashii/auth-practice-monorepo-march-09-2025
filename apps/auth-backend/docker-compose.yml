services:
  # Database service
  auth-backend-db:
    image: postgres:latest
    container_name: auth-backend-db
    environment:
      - POSTGRES_DB=auth-backend-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, pg_isready -U postgres]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis service
  auth-backend-redis:
    image: redis:7.4-alpine
    container_name: auth-backend-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: [CMD, redis-cli, ping]
      interval: 5s
      timeout: 5s
      retries: 5

  # Development service with live reloading
  auth-backend-dev:
    build:
      context: ../.. # Root of the monorepo
      dockerfile: apps/auth-backend/Dockerfile.dev
    container_name: auth-backend-dev
    ports:
      - '8000:8000'
    volumes:
      # Mount the root of the monorepo for workspace dependencies
      - ../..:/app
      # Exclude node_modules from being overwritten by the mount
      - /app/node_modules
      - /app/apps/auth-backend/node_modules
      - /app/packages/shared/node_modules
      # Exclude dist from being overwritten by the mount
      - /app/packages/shared/dist
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://app_user:201fd7a2b44b692cf44d98cd717fd0bda56d0838@auth-backend-db:5432/auth-backend-db?search_path=auth,public
      # - DATABASE_URL=postgresql://postgres:postgres@auth-backend-db:5432/auth-backend-db?search_path=auth,public
      - REDIS_URL=redis://auth-backend-redis:6379
    restart: unless-stopped
    depends_on:
      auth-backend-db:
        condition: service_healthy
      auth-backend-redis:
        condition: service_healthy
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8000/health || curl -f http://localhost:8000/health/db']
      interval: 10s
      timeout: 5s
      retries: 3

  # Production-ready service
  auth-backend:
    build:
      context: ../.. # Root of the monorepo
      dockerfile: apps/auth-backend/Dockerfile.prod
      target: production
    container_name: auth-backend
    ports:
      - '8000:8000'
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://app_user:201fd7a2b44b692cf44d98cd717fd0bda56d0838@auth-backend-db:5432/auth-backend-db?search_path=auth,public
      - REDIS_URL=redis://auth-backend-redis:6379
    restart: unless-stopped
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8000/health || curl -f http://localhost:8000/health/db']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:
    driver: local
