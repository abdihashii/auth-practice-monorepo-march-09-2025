# Build stage: Use the latest Bun image as base
FROM oven/bun:latest as builder

# Install pnpm
RUN bun install -g pnpm

# Set working directory for the app
WORKDIR /app

# Copy package.json files for workspace from the root of the monorepo
COPY package.json pnpm-workspace.yaml* ./

# Copy the package.json for the auth-backend package
COPY apps/auth-backend/package.json ./apps/auth-backend/

# Copy shared dependencies from root if they exist
COPY tsconfig*.json ./
# COPY packages ./packages

# Install dependencies
RUN pnpm install

# Copy the auth-backend app code, excluding node_modules
COPY apps/auth-backend/src ./apps/auth-backend/src
COPY apps/auth-backend/tsconfig.json ./apps/auth-backend/

# Build the app if needed (for TypeScript compilation)
WORKDIR /app/apps/auth-backend
RUN bun build --target=bun src/index.ts --outdir=./dist

# Production stage: Start fresh with minimal image
FROM oven/bun:latest as production

# No need for pnpm in production since we'll copy the built app

# Set working directory
WORKDIR /app

# Copy built app from builder stage (only what's needed to run)
COPY --from=builder /app/apps/auth-backend/dist ./dist
COPY --from=builder /app/apps/auth-backend/package.json ./

# Instead of running bun install, we'll simply copy the node_modules from the builder stage
COPY --from=builder /app/apps/auth-backend/node_modules ./node_modules

# Set production environment
ENV NODE_ENV=production

# Expose the port the app runs on
EXPOSE 8000

# Command to run the app in production mode
CMD ["bun", "run", "dist/index.js"]
