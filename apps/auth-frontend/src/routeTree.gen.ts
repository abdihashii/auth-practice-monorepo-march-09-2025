/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as VerifyIndexImport } from './routes/verify/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as PublicIndexImport } from './routes/public/index'
import { Route as LoginIndexImport } from './routes/login/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyIndexRoute = VerifyIndexImport.update({
  id: '/verify/',
  path: '/verify/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/public/',
  path: '/public/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/public/': {
      id: '/public/'
      path: '/public'
      fullPath: '/public'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/verify/': {
      id: '/verify/'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof VerifyIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/public': typeof PublicIndexRoute
  '/register': typeof RegisterIndexRoute
  '/verify': typeof VerifyIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/public': typeof PublicIndexRoute
  '/register': typeof RegisterIndexRoute
  '/verify': typeof VerifyIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login/': typeof LoginIndexRoute
  '/public/': typeof PublicIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/verify/': typeof VerifyIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/public' | '/register' | '/verify'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/public' | '/register' | '/verify'
  id: '__root__' | '/' | '/login/' | '/public/' | '/register/' | '/verify/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  PublicIndexRoute: typeof PublicIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  VerifyIndexRoute: typeof VerifyIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  PublicIndexRoute: PublicIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  VerifyIndexRoute: VerifyIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login/",
        "/public/",
        "/register/",
        "/verify/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/public/": {
      "filePath": "public/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/verify/": {
      "filePath": "verify/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
